name: dockercompose16353442507624643927
services:
  bookstore.api:
    build:
      context: D:\Project\ASP.NET\BookStore
      dockerfile: Dockerfile
    container_name: bookstore.api
    depends_on:
      redis:
        condition: service_started
        required: true
      sqlserver:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Server=sqlserver;Database=BookStore;User=sa;Password=PassSQL123!
      Redis__Configuration: redis:6379
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 5000
        published: "5000"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\kuros\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\kuros\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\kuros\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\kuros\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  redis:
    container_name: redis
    image: redis:latest
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
  sqlserver:
    container_name: sqlserver
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: PassSQL123!
    image: mcr.microsoft.com/mssql/server:2019-latest
    networks:
      backend: null
    ports:
      - mode: ingress
        target: 1433
        published: "11433"
        protocol: tcp
    volumes:
      - type: volume
        source: sqlserverdata
        target: /var/opt/mssql
        volume: {}
networks:
  backend:
    name: dockercompose16353442507624643927_backend
    driver: bridge
volumes:
  sqlserverdata:
    name: dockercompose16353442507624643927_sqlserverdata